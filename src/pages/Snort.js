import React, { useEffect } from "react";
import { motion } from "framer-motion";
import { fadeIn } from "../variants";

export default function SnortProject() {
  useEffect(() => {
    window.scrollTo(0, 0); 
  }, []);

  return (
    <section
      id="snort"
      className="py-16 bg-black bg-gradient-to-r from-purple-900 via-black to-purple-900 text-white"
    >
      <div className="container mx-auto text-center">
        <motion.h1
          variants={fadeIn("up", 0.2)}
          initial="hidden"
          whileInView="show"
          animate="show"
          viewport={{ once: false, amount: 0.3 }}
          className="text-4xl font-bold mb-8 mt-5"
        >
          Projet Snort : D√©tection d'intrusions üî•
        </motion.h1>

        <motion.p
          variants={fadeIn("up", 0.4)}
          initial="hidden"
          whileInView="show"
          animate="show"
          viewport={{ once: false, amount: 0.3 }}
          className="text-lg"
        >
          <h2>Installation et Configuration de Snort pour la surveillance du r√©seau</h2>
        </motion.p>

        <motion.div
          variants={fadeIn("up", 0.5)}
          initial="hidden"
          whileInView="show"
          animate="show"
          viewport={{ once: false, amount: 0.3 }}
          className="flex justify-center mt-10"
        >
          <img
            src="images/snort.jpg"
            alt="Snort IDS"
            className="w-80 h-60 opacity-80 rounded-lg shadow-lg"
          />
        </motion.div>

        <motion.div
          variants={fadeIn("up", 0.5)}
          initial="hidden"
          whileInView="show"
          animate="show"
          viewport={{ once: false, amount: 0.3 }}
          className="flex justify-center mt-10"
        >
          <p>
            Snort est un syst√®me de d√©tection d'intrusions open-source permettant de surveiller le trafic r√©seau en temps r√©el.
            Nous avons suivi plusieurs √©tapes pour configurer Snort et analyser des attaques potentielles.
            
            <h3 className="text-2xl font-semibold mt-6">
              1Ô∏è‚É£ Installation et Configuration de Snort üõ†Ô∏è
            </h3>
            - Installation de Snort et de ses d√©pendances sur un serveur Linux.  
            - Configuration des interfaces r√©seau pour √©couter le trafic.  
            - Ajout des r√®gles de d√©tection personnalis√©es dans `snort.conf`.  

            <h3 className="text-2xl font-semibold mt-6">
              2Ô∏è‚É£ D√©tection et Analyse des Intrusions üîç
            </h3>
            - Utilisation de Snort en mode capture (`snort -A console -q -c /etc/snort/snort.conf`).  
            - Analyse des logs g√©n√©r√©s (`/var/log/snort/alert`).  
            - D√©tection d'attaques DoS, scans de ports et tentatives d'injection SQL.  

            <h3 className="text-2xl font-semibold mt-6">
              3Ô∏è‚É£ Visualisation des Alertes üö®
            </h3>
            - Utilisation de **Wireshark** pour inspecter les paquets captur√©s.  
            - Int√©gration avec **ELK (Elasticsearch, Logstash, Kibana)** pour une analyse graphique.  
            - Configuration de **BASE/Snorby** pour une interface web de monitoring.  

            <h3 className="text-2xl font-semibold mt-6">
              4Ô∏è‚É£ Am√©lioration et Personnalisation des R√®gles
            </h3>
            - Cr√©ation de r√®gles Snort sp√©cifiques pour d√©tecter des attaques cibl√©es.  
            - Ajustement du niveau de sensibilit√© des alertes.  
            - Mise en place d'actions de blocage automatique avec **Suricata ou PfSense**.  

            <h3 className="text-2xl font-semibold mt-6">
              üìå Conclusion
            </h3>
            Gr√¢ce √† Snort, nous avons pu d√©tecter des menaces r√©seau en temps r√©el et am√©liorer la s√©curit√© de notre infrastructure.
            L'int√©gration avec des outils de visualisation a permis d'optimiser la gestion des alertes et d'automatiser certaines r√©ponses aux attaques.
          </p>
        </motion.div>
      </div>
    </section>
  );
}
